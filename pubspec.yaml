name: smart_fridge
description: Smart Fridge App for managing groceries using food recognition and predictive analytics.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ">=3.0.0 <4.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  flutter_native_splash: ^2.2.16
  connectivity_plus: ^5.0.1

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  get: ^4.6.6
  get_storage: ^2.1.1
  cupertino_icons: ^1.0.2
  csv: ^5.0.1

  camera: ^0.10.5
  flutter_vision: ^1.1.4
  permission_handler: ^11.0.1
  flutter_tts: ^3.8.2

  font_awesome_flutter: ^10.1.0
  flutter_rating_bar: ^4.0.1

  iconsax_flutter: ^1.0.0
  rive: ^0.9.1
  lottie: ^2.7.0

  # date format
  intl: ^0.18.1
  animations: ^2.0.3

  # state management
  flutter_bloc: ^8.1.2

  # comparing dart objects
  equatable: ^2.0.5

  flutter_svg: ^2.0.9

  # service locator
  get_it: ^7.6.0

  # database
  floor: ^1.4.2

  # hooks
  flutter_hooks: ^0.18.3

  # cached image
  cached_network_image: ^3.2.0

  dartz: ^0.10.1

  # animations
  liquid_pull_to_refresh: ^3.0.1
  liquid_swipe: ^3.1.0
  smooth_page_indicator: ^1.1.0
  firebase_core: ^2.24.2
  firebase_auth: ^4.14.0
  cloud_firestore: ^4.13.1
  google_sign_in: ^6.2.1

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0
  retrofit_generator: 3.0.1+1
  floor_generator: 1.2.0
  build_runner: 2.1.2

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/object_detection/
    - assets/object_detection/yolo/
    - assets/datasets/
    - assets/images/
    - assets/images/onboarding/
    - assets/images/logos/
    - assets/images/icons/
    - assets/images/icons/grocery/
    - assets/images/icons/drawer/
    - assets/images/icons/rive/
    - assets/images/auth/
    - assets/images/auth/onboarding/
    - assets/images/miscellaneous/
    - assets/videos/
    - assets/images/temp/
    - assets/images/meals/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: WorkSans
      fonts:
        # - asset: assets/fonts/WorkSans-Regular.ttf
        - asset: assets/fonts/WorkSans-Medium.ttf
          weight: 500
        # - asset: assets/fonts/WorkSans-SemiBold.ttf
        #   weight: 600
        # - asset: assets/fonts/WorkSans-Bold.ttf
        #   weight: 700
    - family: Roboto
      fonts:
        - asset: assets/fonts/Roboto-Bold.ttf
          # - asset: assets/fonts/Roboto-Regular.ttf
          # - asset: assets/fonts/Roboto-Medium.ttf
          weight: 400
    - family: SofiaPro
      fonts:
        # - asset: assets/fonts/SofiaProLight.ttf
        #   weight: 300
        # - asset: assets/fonts/SofiaProRegular.ttf
        - asset: assets/fonts/SofiaProMedium.ttf
          weight: 500
        # - asset: assets/fonts/SofiaProSemiBold.ttf
        #   weight: 600
        # - asset: assets/fonts/SofiaProBold.ttf
        #   weight: 700
    - family: Poppins
      fonts:
        - asset: assets/fonts/Poppins-Bold.ttf
          weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
